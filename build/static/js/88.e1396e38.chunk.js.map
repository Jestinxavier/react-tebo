{"version":3,"file":"static/js/88.e1396e38.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const noop = (any) => any;\n\nexport { noop };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["Feature","node","_classCallCheck","this","isMounted","_createClass","key","value","noop","any","warning","invariant","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","arguments","length","undefined","point","x","y","addPointerInfo","handler","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","indexOf","push","cancel","index","splice","delete","process","_ref","i","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","distance","abs","PanSession","handlers","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","update","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","subtractPoint","_ref2","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","toFromDifference","mix","calcLength","axis","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","current","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","testProp","Boolean","isString","singleColorRegex","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_v$match","match","floatRegex","_v$match2","c","alpha","_defineProperty","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","test","parse","red","green","blue","_ref$alpha","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","getColorType","find","asRGBA","concat","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","apply","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","isArray","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","keys","some","velocitySampleDuration","spring","restDelta","restSpeed","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","start","stop","animate","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","Set","sampleDelta","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","element","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","fill","iterations","direction","animateStyle","owner","onfinish","set","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","transition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","controls","dragControls","subscribe","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","px","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","resolveCSSVariables","transitionEnd","assign","obj","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","register","didUpdate","safeToRemove","setOptions","onExitComplete","globalProjectionState","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","resolve","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","children","isDirty","child","sort","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","tagName","_this$options","mount","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","size","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isMotionValue","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","document","querySelector","DocumentProjectionNode","ref","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","shallowCompare","prevLength","isNumericalString","isZeroValueString","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","valueTarget","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","appearId","transformProps","sortNodePosition","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","exit","addHoverEvent","callbackName","whileHover","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps2","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","onViewportEnter","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","_viewport$fallback","threshold","isIntersecting","_this3$node$getProps","onViewportLeave","viewportFallback","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","BoundingBoxDimension","gestureAnimations","inView","tap","focus","hover","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","isBrowser","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","projectionId","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_get","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}